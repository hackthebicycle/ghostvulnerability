credits: Sean Fitzgerald 

#include <netdb.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <errno.h>

#define CANARY "in_the_coal_mine"

struct {
  char buffer[1024];
  char canary[sizeof(CANARY)];
} temp = { "buffer", CANARY };

/****THIS IS OUR DATA STRUCT. WE'RE IMAGINING THAT WE HAVE RECALLED THE USER'S PASSWORD FROM A SECURE DATABASE, THE PASSWORD IS STORED IN THE
SECURE DATABASE ****/ 
struct {
char extra_information[30]; //a buffer for some user information 
char password[size of ("MY_AWESOME_PASSWORD")];  //a buffer for the password 
} host data = { "extra room for information...", MY_AWESOME_PASSWORD"}; 
/****THIS IS OUR DATA STRUCT. WE'RE IMAGINING THAT WE HAVE RECALLED THE USER'S PASSWORD FROM A SECURE DATABASE, THE PASSWORD IS STORED IN THE
SECURE DATABASE ****/ 

int main(void) {
  struct hostent resbuf; //this will be filled with details about the host record
  struct hostent *result; //this will point to the host record
  int herrno; //errror information in case gethostname_r() cannot proceed 
  int retval; //return value of gethostname_r() 

/** variable name must be exactly correct to overwrite the password**/ 
  char name[sizeof(host_data.extra_information)]; //create temp name variable 
  char password[1024]; 
/** variable name must be exactly correct to overwrite the password**/   

/**query user for credentials**/ 
puts("enter host username");
scanf(%s, name);
puts("enter host password"); 
scanf(%s, password); 
/**query user for credentials**/ 

/**vulnerable code below**/
  retval = gethostbyname_r(name, &resbuf,host_data.extra_information, sizeof(host_data.extra_information), &result, &herrno);
/** oops overwrote the password in the host_data by accident! **/ 
/** vulnerable code above **/ 

/* check to see if passwords match**/ 
if (strcmp(host_data.password, password) == 0)
{
  puts("LOG IN SUCCESSFUL!"); 
  exit (EXIT_SUCCESS); 
}
else 
{
  puts("LOG IN UNSUCCESSFUL...");
   exit (EXIT_SUCCESS);
}

if(retval == ERANGE)
{
puts("Could not call getHostByname because the rance of the password was protected"); 
puts("In real life, we would call getgostbyname_r again with a larger buffer size"); 
 exit (EXIT_SUCCESS);
 }
}
